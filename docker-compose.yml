version: "2"
services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  flask:
    container_name: flask
    build:
      context: .
      dockerfile: compose/flask/Dockerfile
    volumes: ["./server:/app/server"]
    ports:
      - "5000:5000"
    depends_on:
      - kafka
      - postgres
      - es
    environment:
      FLASK_ENV: development
    restart: on-failure:4  # Restart till connects to postgres

  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dev
    ports:
      - "5432:5432"
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data # Persist data even after container is removed

  es:
    container_name: es
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - 9200:9200
    # volumes:
      # - es_data:/usr/share/elasticsearch/data # Persist data even after container is removed
    restart: always

  # react:
  #   container_name: react
  #   build:
  #     context: .
  #     dockerfile: compose/react/Dockerfile
  #   volumes: [
  #     "./client:/app/client:delegated",
  #     "/app/client/node_modules"
  #     ]
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     CHOKIDAR_USEPOLLING: "true"

volumes:
  es_data:
    driver: local
  postgres_data:
